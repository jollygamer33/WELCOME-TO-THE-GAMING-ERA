// This script provides client-side validation for the sign-up form
// with fun, gaming-themed feedback messages.

document.addEventListener('DOMContentLoaded', () => {
    // Get the sign-up form element
    const signupForm = document.getElementById('signupForm');
    
    // Listen for the form submission event
    signupForm.addEventListener('submit', (event) => {
        // Prevent the default form submission to handle it with our script
        event.preventDefault(); 
        
        // Get the values from the input fields
        const username = document.getElementById('username').value.trim();
        const email = document.getElementById('email').value.trim();
        const password = document.getElementById('password').value.trim();

        // Perform validation checks
        if (!username || !email || !password) {
            alert('Error: All fields are required to start the mission!');
            return;
        }

        if (password.length < 8) {
            alert('Warning: Password must be at least 8 characters for maximum security!');
            return;
        }

        if (!validateEmail(email)) {
            alert('Critical Error: Invalid email address. Check your data link.');
            return;
        }
        
        // If validation is successful, this is where you would send the data to a server
        // This part is for demonstration; replace this with your actual backend logic.
        alert('Transmission successful! Welcome to the squad, ' + username + '!');
        
        // After successful server-side processing, you could redirect the user
        // window.location.href = 'dashboard.html';
    });

    // A helper function to check if an email address is valid
    function validateEmail(email) {
        // Regular expression for a basic email format validation
        const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return re.test(String(email).toLowerCase());
    }
});
